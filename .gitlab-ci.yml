image: maven:3-jdk-8-alpine

variables:
  # This will supress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd`are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"

# Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_JOB_REF_NAME"'
cache:
  key: MAVEN_MODULES
  paths:
    - .m2/repository

stages:
  - build
  - test

#
# BUILD PHASE
#
# Build-Jobs der drei Umgebungen (Branch, Develop, Staging) erzeugen ein "dist"-Verzeichnis, welches an die Deploy-Jobs weitergegeben wird
before_script:
  - echo -e " Home:\        ${HOME}\n Pipeline:\     ${CI_PIPELINE_ID}\n Branch/Tag:\  ${CI_JOB_REF_NAME}\n Gitlab User:\ ${GITLAB_USER_NAME}\n Verzeichnis:\ `pwd`\n MAVEN_OPTS:\ ${MAVEN_OPTS}\n MAVEN_CLI_OPTS:\ ${MAVEN_CLI_OPTS}"

.build-artifacts: &build-artifacts
  stage: build
  retry: 2
  tags:
    - Java
  artifacts:
    paths:
      - target/workhorse-test.jar
    expire_in: 1 hour
  before_script:
    - echo -e " Home:\        ${HOME}\n Pipeline:\     ${CI_PIPELINE_ID}\n Branch/Tag:\  ${CI_JOB_REF_NAME}\n Gitlab User:\ ${GITLAB_USER_NAME}\n Verzeichnis:\ `pwd`\n MAVEN_OPTS:\ ${MAVEN_OPTS}\n MAVEN_CLI_OPTS:\ ${MAVEN_CLI_OPTS}"
    - mkdir -p maven-repository
    - apk --update --no-cache add git
    - apk --update --no-cache add grep


build:
  stage: build
  script:
    - mvn $MAVEN_CLI_OPTS clean compile


test:
  stage: test
  script:
    - mvn $MAVEN_CLI_OPTS test
  artifacts:
    reports:
      junit:
        - "*/target/surefire-reports/TEST-*.xml"
        
deploy:
  image: maven:3.3.9-jdk-8
  script:
    - 'mvn deploy -s ci_settings.xml'
  only:
    - master
  
